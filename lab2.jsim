* Candari, Roger II
* Lluisma, Arthur Jed
* Reyes, Francesca Dominique

.include "8clocks.jsim"
.include "nominal.jsim"
.include "stdcell.jsim"

* the subcircuit for OUT = ABC + DE + FG
* both OR and AND gates were changed to NAND gates while retaining their outputs

.subckt fx a b c d e f g out
Xfirst a b c subout1 nand3
Xsecond d e subout2 nand2
Xthird f g subout3 nand2
Xfourth subout1 subout2 subout3 out nand3
.ends

* the subcircuit for the full adder
* for the sum, 2 cascading XOR gates were used to carry out the equation A'BC' + A'B'C + ABC + AB'C' with C as the carry_in
* for the carry_out, the output of the previous XOR gate and 3 other NAND gates were used to carry out the equation C(A'B+AB')+AB with C as the carry_in
* both OR and AND gates were changed to NAND gates while retaining their outputs
* both equations were derived from the full adder circuit's truth table

.subckt fa a b carry_in sum carry_out
* the sum
Xfirst a b subout1 xor2
Xsecond subout1 carry_in sum xor2
* the carry
Xthird subout1 carry_in subout2 nand2
Xfourth a b subout3 nand2
Xfifth subout2 subout3 carry_out nand2
.ends

Xfx clk1 clk2 clk3 clk4 clk5 clk6 clk7 out1 fx
Xfa clk5 clk6 clk7 sum1 carry_out1 fa

.tran 640ns
.plot clk1
.plot clk2
.plot clk3
.plot clk4
.plot clk5
.plot clk6
.plot clk7
.plot out1
.plot sum1
.plot carry_out1
